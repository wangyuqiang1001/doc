1: synchronized 和 ReentrantLock 都是非公平锁，但是ReentrantLock 可以实现fair lock公平锁，
2: 自旋锁，故意思义就是一直在旋转，在原生jdk底层原子类中有使用，使用do while,如果设置不成功
就会一直自旋等待，重试。
自旋锁和互斥锁的区别在于不会线程阻塞，而是处于循环忙等的状态,参考院子类(cpu此时在循环操作，不能做其他操作)
适合锁持有时间较短的情况，因为如果时间长的话一直处于自旋重试状态，太浪费性能。
3：读写锁（共享互斥锁，读模式共享，写模式互斥）
只有单个线程可以占用写模式的读写锁，但是多个线程可以同时占用读模式的读写锁，
适用于对数据结构读次数远大于写的情况。
4:锁的升级和降级: