浙江电子口岸公司:
一： 索引失效情况
1：比如如果是复合索引，要遵守左前缀原则，即从最左边开始，且连续，不能跳，可以不全，
2:在索引列上作函数计算操作，手动或者自动类型转换，，可能导致索引失败而全表扫描。
3:使用!=或者是<>的时候，无法使用索引，使用is not null 或者is null的时候将导致索引失效。
4:like使用%开头，将导致索引失效全表扫描
5:字符串加上单引号会导致索引失效
6:使用or将导致索引失效
7:联合索引中的列使用范围将会失效
二： 乐观锁悲观锁在项目中的实际运用
悲观锁：实际上这里有个误区，mysql默认隔离级别。可重复读是不会有线程安全问题的，但是
比如我们两个线程同时读取同一行数据，然后基于此更新，这就有问题了，select 默认是不会阻塞的
也就是即便你两个线程开启事务，先查询同一条数据，然后基于此修改，比如当前number是3，然后
两个线程同时对number进行自加操作的话，那么可能会获取4,这时我们需要使用select ....for update
操作，相当于一个排它锁，然后只有等待第一个线程或者事务执行完毕以后才会进行第二个。
乐观锁:一般采用一个version版本号控制，其实大概的意思就是比如商品库存的话，AB两个事务同时减库存，
但是可能还是上面的问题，这样的话使用一个版本号 ，先查出来的，然后更新的时候将版本号加1，这时候
B事务也要更新，但是B事务更新的前提是B事务获取的Version值自加1必须大于当前数据库的version值。
如果相等，代表A事务已经完成更新。update t_goods   set status=2,version=version+1  
where id=#{id} and version=#{version}; 
三: spring中事务的常见配置




